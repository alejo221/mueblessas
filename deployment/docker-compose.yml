version: '3.8'
services:
  dynamodb-local:
    image: amazon/dynamodb-local
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    networks:
      - backend

  dynamodb-init:
    image: amazon/aws-cli
    container_name: dynamodb-init
    depends_on:
      - dynamodb-local
    command: /bin/sh -c "/create-dynamodb-table.sh && sleep infinity"
    volumes:
      - type: bind
        source: ./scripts/create-dynamodb-table.sh
        target: /create-dynamodb-table.sh
    environment:
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      AWS_DEFAULT_REGION: us-west-2
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_LOAD_DEFINITIONS: /etc/rabbitmq/definitions.json
    volumes:
      - ./scripts/rabbit-definitions.json:/etc/rabbitmq/definitions.json
      - ./scripts/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - backend

  ms-furniture:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: ms-furniture
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
      - dynamodb-local
    environment:
      SPRING_PROFILES_ACTIVE: local
    networks:
      - backend

networks:
  backend: {}